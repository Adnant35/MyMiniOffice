/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.Toolkit;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author adnan
 */
public class DekontEkle extends javax.swing.JFrame {

    /**
     * Creates new form GiderEkle
     */
    public DekontEkle() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new cambodia.raven.DateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        choice1 = new java.awt.Choice();
        jLabel2 = new javax.swing.JLabel();
        choice2 = new java.awt.Choice();
        jLabel3 = new javax.swing.JLabel();
        choice3 = new java.awt.Choice();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();

        dateChooser1.setButton(jButton4);
        dateChooser1.setTextRefernce(jTextField4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MyMiniOfficeV1.0");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Geri");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel1.setText("Ödeme Yöntemi Seçin:");

        choice1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                choice1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                choice1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                choice1MouseReleased(evt);
            }
        });

        jLabel2.setText("Kredi Kartı Seçiniz:");

        jLabel3.setText("Gider Türü Seçiniz:");

        jLabel4.setText("Tutar:");

        jLabel5.setText("KDV Tutarı:");

        jLabel6.setText("KDV Oranı:");

        jButton2.setText("✓");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("Dekont Ekle");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
        });

        jLabel7.setText("Tarih:");

        jButton4.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(496, 496, 496))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(37, 37, 37)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(59, 59, 59)
                                        .addComponent(jLabel2)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton4)))))))
                .addGap(313, 313, 313))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        try{

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("Select Kartİsmi  from KrediKartları") ;

            while(rs.next()){
                String a=rs.getString("Kartİsmi");
                choice2.add(a);

            }

        } catch (Exception e){}
        try{

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("Select Acıklama  from GiderTürü") ;

            while(rs.next()){
                String a=rs.getString("Acıklama");
                choice3.add(a);

            }

        } catch (Exception e){}

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        MaliIslemler um = new MaliIslemler();
        um.setVisible(true);
        um.pack();
        um.setLocationRelativeTo(null);
        um.setDefaultCloseOperation(Giris.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked
private  void Seticon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("favicon_1.png")));
                
                
                }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       Seticon();
        jTextField3.enable(false);
        jLabel2.setVisible(false);
        choice2.setVisible(false);
        choice1.add("Kredi Kartı");
        choice1.add("Nakit");
        choice1.add("Çek/Senet");
    }//GEN-LAST:event_formWindowOpened

    private void choice1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choice1MouseClicked


    }//GEN-LAST:event_choice1MouseClicked

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated

    }//GEN-LAST:event_formWindowDeactivated

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void choice1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choice1MousePressed

    }//GEN-LAST:event_choice1MousePressed

    private void choice1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_choice1MouseReleased

    }//GEN-LAST:event_choice1MouseReleased

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if (choice1.getSelectedItem() == "Kredi Kartı") {
            jLabel2.setVisible(true);
            choice2.setVisible(true);

        } else {
            jLabel2.setVisible(false);
            choice2.setVisible(false);
        }
    }//GEN-LAST:event_formMouseMoved

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        String Miktar = jTextField1.getText();
        float miktar = Float.parseFloat(Miktar);
        String KDVOran = jTextField2.getText();
        float kdvoran = Float.parseFloat(KDVOran);
        float tutar = (float) ((miktar * kdvoran) * 0.01);
        String VergiTutar = String.valueOf(tutar);
        jTextField3.setText(VergiTutar);

    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked

        String OdemeYontemi = choice1.getSelectedItem();
        String GiderTürü = choice3.getSelectedItem();
        String Tutar = jTextField1.getText();
        float tutar = Float.parseFloat(Tutar);
        String kdv = jTextField3.getText();
        String Tariht = jTextField4.getText();
        String kk = choice2.getSelectedItem();

        if (OdemeYontemi == "Kredi Kartı") {

            try {

                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
                String Tarih = sdf2.format(sdf.parse(Tariht));
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
                Statement st = con.createStatement();

                String q1 = "SELECT IDENT_CURRENT('Gider') GiderNo";
                ResultSet rs1 = st.executeQuery(q1);
                if (rs1.next()) {
                    String ıd = rs1.getString("GiderNo");
                    System.out.println(ıd);
                    int ıds = Integer.parseInt(ıd);
                    if (ıds == 1) {
                        String q4 = "select Tutar,ToplamGider from Gider where GiderNo=1";
                        ResultSet rs4 = st.executeQuery(q4);
                        if (rs4.next()) {
                            String q2 = "select ToplamGider from Gider where GiderNo='" + ıd + "';";
                            ResultSet rs2 = st.executeQuery(q2);
                            if (rs2.next()) {
                                String aratutar = rs2.getString("ToplamGider");
                                float Aratutar = Float.parseFloat(aratutar);
                                float TamTutar = Aratutar + tutar;

                                String q = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider,KrediKartıİsmi) "
                                        + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + TamTutar + "','" + kk + "');";
                                ResultSet rs = st.executeQuery(q);

                            }

                        } else {
                            String q3 = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider,KrediKartıİsmi) "
                                    + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + Tutar + " ','" + kk + "');";
                            ResultSet rs = st.executeQuery(q3);

                        }

                    } else {
                        System.out.println("Girdi");
                        String q2 = "select ToplamGider from Gider where GiderNo='" + ıd + "';";
                        ResultSet rs2 = st.executeQuery(q2);
                        if (rs2.next()) {
                            String aratutar = rs2.getString("ToplamGider");
                            float Aratutar = Float.parseFloat(aratutar);
                            float TamTutar = Aratutar + tutar;

                            String q = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider,KrediKartıİsmi) "
                                    + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + TamTutar + "','" + kk + "');";
                            System.out.println(q);
                            ResultSet rs = st.executeQuery(q);

                        }
                    }

                }

            } catch (Exception e) {
            }

        } else {

            try {

                SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
                String Tarih = sdf2.format(sdf.parse(Tariht));
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
                Statement st = con.createStatement();

                String q1 = "SELECT IDENT_CURRENT('Gider') GiderNo";
                ResultSet rs1 = st.executeQuery(q1);
                if (rs1.next()) {
                    String ıd = rs1.getString("GiderNo");
                    System.out.println(ıd);
                    int ıds = Integer.parseInt(ıd);
                    if (ıds == 1) {
                        String q4 = "select Tutar,ToplamGider from Gider where GiderNo=1";
                        ResultSet rs4 = st.executeQuery(q4);
                        if (rs4.next()) {
                            String q2 = "select ToplamGider from Gider where GiderNo='" + ıd + "';";
                            ResultSet rs2 = st.executeQuery(q2);
                            if (rs2.next()) {
                                String aratutar = rs2.getString("ToplamGider");
                                float Aratutar = Float.parseFloat(aratutar);
                                float TamTutar = Aratutar + tutar;
                                  
                                if (OdemeYontemi=="Nakit") {

                                    try {

                                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                                        Connection con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
                                        Statement st1 = con1.createStatement();

                                        String n1 = "SELECT IDENT_CURRENT('Kasa') KasaiNo";
                                        ResultSet nrs1 = st1.executeQuery(n1);
                                        if (nrs1.next()) {
                                            String nıd = nrs1.getString("KasaiNo");
                                            System.out.println(nıd);
                                            int nıds = Integer.parseInt(nıd);
                                            if (nıds == 1) {
                                                String n4 = "select Tutar,Tarih from Kasa where KasaiNo=1";
                                                ResultSet nrs4 = st1.executeQuery(n4);
                                                if (nrs4.next()) {
                                                    String n2 = "select KasaBakiye from kasa where KasaiNo='" + nıd + "';";
                                                    ResultSet nrs2 = st1.executeQuery(n2);
                                                    if (nrs2.next()) {
                                                        String naratutar = nrs2.getString("KasaBakiye");
                                                        float nAratutar = Float.parseFloat(naratutar);
                                                        float nTamTutar = nAratutar - tutar;

                                                        String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                                + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";
                                                        ResultSet nrs = st1.executeQuery(n);

                                                    }

                                                } else {
                                                    String n3 = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + Tutar + "','" + Tarih + " ');";
                                                    ResultSet nrs = st1.executeQuery(n3);

                                                }

                                            } else {
                                                String n2 = "select KasaBakiye from Kasa where KasaiNo='" + nıd + "';";
                                                ResultSet nrs2 = st1.executeQuery(n2);
                                                if (nrs2.next()) {
                                                    String naratutar = nrs2.getString("KasaBakiye");
                                                    float nAratutar = Float.parseFloat(naratutar);
                                                    float nTamTutar = nAratutar - tutar;
                                                    String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";

                                                    ResultSet nrs = st1.executeQuery(n);

                                                }
                                            }

                                        }

                                    } catch (Exception e) {
                                    }

                                
                                
                                    
                                }
                                String q = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider) "
                                        + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + TamTutar + "');";
                                ResultSet rs = st.executeQuery(q);
                                

                            }

                        } else {
                            if (OdemeYontemi=="Nakit") {
                                    System.out.println("Gldi3");

                                
                                    try {

                                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                                        Connection con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
                                        Statement st1 = con1.createStatement();

                                        String n1 = "SELECT IDENT_CURRENT('Kasa') KasaiNo";
                                        ResultSet nrs1 = st1.executeQuery(n1);
                                        if (nrs1.next()) {
                                            String nıd = nrs1.getString("KasaiNo");
                                            System.out.println(nıd);
                                            int nıds = Integer.parseInt(nıd);
                                            if (nıds == 1) {
                                                String n4 = "select Tutar,Tarih from Kasa where KasaiNo=1";
                                                ResultSet nrs4 = st1.executeQuery(n4);
                                                if (nrs4.next()) {
                                                    String n2 = "select KasaBakiye from kasa where KasaiNo='" + nıd + "';";
                                                    ResultSet nrs2 = st1.executeQuery(n2);
                                                    if (nrs2.next()) {
                                                        String naratutar = nrs2.getString("KasaBakiye");
                                                        float nAratutar = Float.parseFloat(naratutar);
                                                        float nTamTutar = nAratutar - tutar;

                                                        String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                                + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";
                                                        ResultSet nrs = st1.executeQuery(n);

                                                    }

                                                } else {
                                                    String n3 = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + Tutar + "','" + Tarih + " ');";
                                                    ResultSet nrs = st1.executeQuery(n3);

                                                }

                                            } else {
                                                String n2 = "select KasaBakiye from Kasa where KasaiNo='" + nıd + "';";
                                                ResultSet nrs2 = st1.executeQuery(n2);
                                                if (nrs2.next()) {
                                                    String naratutar = nrs2.getString("KasaBakiye");
                                                    float nAratutar = Float.parseFloat(naratutar);
                                                    float nTamTutar = nAratutar - tutar;
                                                    String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";

                                                    ResultSet nrs = st1.executeQuery(n);

                                                }
                                            }

                                        }

                                    } catch (Exception e) {
                                    }

                                
                                
                                    
                                }
                            String q3 = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider) "
                                    + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + Tutar + " ');";
                            ResultSet rs = st.executeQuery(q3);

                        }

                    } else {
                        if (OdemeYontemi=="Nakit") {
                                    System.out.println("Gldi4");
                                    
                                  
                                   
                                    try {

                                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                                        Connection con1 = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;user=admin1;password=adnan3553;databaseName=kurum;");
                                        Statement st1 = con1.createStatement();

                                        String n1 = "SELECT IDENT_CURRENT('Kasa') KasaiNo";
                                        ResultSet nrs1 = st1.executeQuery(n1);
                                        if (nrs1.next()) {
                                            String nıd = nrs1.getString("KasaiNo");
                                            System.out.println(nıd);
                                            int nıds = Integer.parseInt(nıd);
                                            if (nıds == 1) {
                                                String n4 = "select Tutar,Tarih from Kasa where KasaiNo=1";
                                                ResultSet nrs4 = st1.executeQuery(n4);
                                                if (nrs4.next()) {
                                                    String n2 = "select KasaBakiye from kasa where KasaiNo='" + nıd + "';";
                                                    ResultSet nrs2 = st1.executeQuery(n2);
                                                    if (nrs2.next()) {
                                                        String naratutar = nrs2.getString("KasaBakiye");
                                                        float nAratutar = Float.parseFloat(naratutar);
                                                        float nTamTutar = nAratutar - tutar;

                                                        String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                                + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";
                                                        ResultSet nrs = st1.executeQuery(n);

                                                    }

                                                } else {
                                                    String n3 = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + Tutar + "','" + Tarih + " ');";
                                                    ResultSet nrs = st1.executeQuery(n3);

                                                }

                                            } else {
                                                String n2 = "select KasaBakiye from Kasa where KasaiNo='" + nıd + "';";
                                                ResultSet nrs2 = st1.executeQuery(n2);
                                                if (nrs2.next()) {
                                                    String naratutar = nrs2.getString("KasaBakiye");
                                                    float nAratutar = Float.parseFloat(naratutar);
                                                    float nTamTutar = nAratutar - tutar;
                                                    String n = "insert into Kasa(GirdiCikti,Tutar,KasaBakiye,Tarih) "
                                                            + "values('Çıktı','" + Tutar + "','" + nTamTutar + "','" + Tarih + "');";

                                                    ResultSet nrs = st1.executeQuery(n);

                                                }
                                            }

                                        }

                                    } catch (Exception e) {
                                    }

                                
                                }
                                    
                                
                        String q2 = "select ToplamGider from Gider where GiderNo='" + ıd + "';";
                        ResultSet rs2 = st.executeQuery(q2);
                        if (rs2.next()) {
                            String aratutar = rs2.getString("ToplamGider");
                            float Aratutar = Float.parseFloat(aratutar);
                            float TamTutar = Aratutar + tutar;

                            String q = "insert into Gider(ÖdemeYontemi,GiderTürü,Tutar,kdv,GiderTarihi,ToplamGider) "
                                    + "values('" + OdemeYontemi + "','" + GiderTürü + "','" + Tutar + "','" + kdv + "','" + Tarih + "','" + TamTutar + "');";
                            ResultSet rs = st.executeQuery(q);

                        }
                    }

                }

            } catch (Exception e) {
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Dekont Basarıyla Eklenmiştir.");
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DekontEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DekontEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DekontEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DekontEkle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DekontEkle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice choice1;
    private java.awt.Choice choice2;
    private java.awt.Choice choice3;
    private cambodia.raven.DateChooser dateChooser1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
